// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepairShopManagementAPIApp.Data;

#nullable disable

namespace RepairShopManagementAPIApp.Migrations
{
    [DbContext(typeof(RepairShopManagementAPIDbContext))]
    [Migration("20250120213819_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RepairShopManagementAPIApp.Data.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIRSTNAME");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LASTNAME");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOTES");

                    b.Property<string>("PrimaryPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PRIMARY_PHONE");

                    b.Property<string>("SecondaryPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SECONDARY_PHONE");

                    b.HasKey("Id");

                    b.ToTable("CUSTOMERS", (string)null);
                });

            modelBuilder.Entity("RepairShopManagementAPIApp.Data.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DateOfPurchase")
                        .HasColumnType("date")
                        .HasColumnName("DATE_OF_PURCHASE");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DEVICE_TYPE");

                    b.Property<string>("Maker")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MAKER");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODEL");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SERIAL_NUMBER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.ToTable("DEVICES", (string)null);
                });

            modelBuilder.Entity("RepairShopManagementAPIApp.Data.ServiceEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Damages")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DAMAGES");

                    b.Property<DateTime?>("DateOfReturn")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_OF_RETURN");

                    b.Property<DateTime?>("DateOfServiceEnd")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_OF_SERVICE_END");

                    b.Property<DateTime?>("DateOfServiceStart")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_OF_SERVICE_START");

                    b.Property<DateTime>("DateTimeOfEntry")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE_TIME_OF_ENTRY");

                    b.Property<double?>("Deposit")
                        .HasColumnType("float")
                        .HasColumnName("DEPOSIT");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<double?>("EstimatedPrice")
                        .HasColumnType("float")
                        .HasColumnName("ESTIMATED_PRICE");

                    b.Property<double?>("FinalPrice")
                        .HasColumnType("float")
                        .HasColumnName("FINAL_PRICE");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit")
                        .HasColumnName("IS_RETURNED");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOTES");

                    b.Property<string>("PartsUsed")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PARTS_USED");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PROBLEM");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("SERVICE_ENTRY", (string)null);
                });

            modelBuilder.Entity("RepairShopManagementAPIApp.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIRSTNAME");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LASTNAME");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("USERS", (string)null);
                });

            modelBuilder.Entity("RepairShopManagementAPIApp.Data.Device", b =>
                {
                    b.HasOne("RepairShopManagementAPIApp.Data.Customer", "Customer")
                        .WithMany("Devices")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CUSTOMERS_DEVICES");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RepairShopManagementAPIApp.Data.ServiceEntry", b =>
                {
                    b.HasOne("RepairShopManagementAPIApp.Data.Device", "Device")
                        .WithMany("DeviceEntries")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DEVICES_DEVICE_ENTRIES");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("RepairShopManagementAPIApp.Data.Customer", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("RepairShopManagementAPIApp.Data.Device", b =>
                {
                    b.Navigation("DeviceEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
